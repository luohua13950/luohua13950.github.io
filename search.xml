<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>爬虫学习(1)------从数据看奥斯卡陪跑健将到底是谁？学院派评委都热衷于哪类电影？</title>
      <link href="/2020/03/21/pa-chong-xue-xi-1-cong-shu-ju-kan-ao-si-qia-pei-pao-jian-jiang-dao-di-shi-shui-xue-yuan-pai-ping-wei-du-re-zhong-yu-na-lei-dian-ying/"/>
      <url>/2020/03/21/pa-chong-xue-xi-1-cong-shu-ju-kan-ao-si-qia-pei-pao-jian-jiang-dao-di-shi-shui-xue-yuan-pai-ping-wei-du-re-zhong-yu-na-lei-dian-ying/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>奥斯卡颁奖季虽已过去有些日子，《寄生虫》夺得最佳影片，《1917》也不拉下风，全片的长镜头的确震撼，这都不是今天要蹭的过气热点。作为一个电影死忠，当然还是想通过数据看看谁是奥斯卡男主最优陪跑员，谁又是白给先锋，奥斯卡派评委都热衷于哪类电影，以前总是听说小李子一直在陪跑（不过他在16年就凭借《荒野猎人》中的出色表现夺得最佳男主，还记得大众网友烧香拜佛来保佑他夺冠），今天就通过爬取一些历年数据看看是不是正如影迷们所说那个维密收割机–小李子才是陪跑之王。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="所用到一些工具"><a href="#所用到一些工具" class="headerlink" title="所用到一些工具"></a>所用到一些工具</h3><ul><li>requests</li><li>lxml</li><li>pymongo</li><li>pandas</li><li>xpath-helper</li></ul><p>requests就不用多说了，凭此库可以满足80%的爬虫任务了；<br>lxml库主要是使用xpath进行提取网页中的一些数据；<br>pymongo是为了将提取的一些非结构化数据进行存储，前面已有一篇介绍的文章<a href="http://www.happyhong.cn/post/29/">MongoDB快速学习</a>，有兴趣的可以点击看看一下一些基本的安装增删改查等等；<br>pandas这么无情的库就不用多介绍了吧，本文用它来读取MongoDB中的数据；<br>xpath-helper是一个直接可以在网页上使用xpath表达式提取信息的工具，需要自己安装，如没有安装包，请私信或留言联系我。</p><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>个人认为选取目标首先还是选择那些突破反爬比较容易的网站，这样可以节省很多时间，不过也可以尝试反爬还可以的，这样可以锻炼技巧，各有利弊。本次选择了时光网，因为有几个榜单就是专门提供各大奖的历史信息，不用特意去找，信息比较集中。</p><h3 id="确认提取链接"><a href="#确认提取链接" class="headerlink" title="确认提取链接"></a>确认提取链接</h3><p>首先登录时光网首页，拉到最下面找到特色榜单选项，点击进入：<br><img src="https://img-blog.csdnimg.cn/20200329180541390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后搜索”奥斯卡”:<br><img src="https://img-blog.csdnimg.cn/20200329180801488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进入搜索结果页面：<br><img src="https://img-blog.csdnimg.cn/20200329180837389.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>上图用箭头标注的即想要的结果，点击奥斯卡历届最佳男主演，进入页面：<br><img src="https://img-blog.csdnimg.cn/20200329181052883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>按照惯例，按F12打开开发者选项，刷新页面，查看请求，一般数据要么在html页面，要么通过json格式，如果请求列表中数据较多，你可以点击XHR来查看json请求，但是你会发现此选项下面并没有请求，这时就选Doc来查看html请求：<br><img src="https://img-blog.csdnimg.cn/20200329182249802.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200329182334151.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>doc下面刚好只有一个请求，直接点进去：<br><img src="https://img-blog.csdnimg.cn/20200329182553592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>标红的为后面要用的请求url，请求方法是<strong>get,get,get</strong>重要的东西说三遍~~，这些要记住，然后切换到Response页面，Ctrl+F搜索一个页面上看到的词随便一个就行，以此来确认你找到的这个请求链接是正确的，我这里搜的是<strong>华金·菲尼克斯</strong>：<br><img src="https://img-blog.csdnimg.cn/20200329182946217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到是有结果的，这说明我们的链接没问题，接下来就开始提取想要的内容了。</p><h2 id="提取信息"><a href="#提取信息" class="headerlink" title="提取信息"></a>提取信息</h2><p>将页面切到Element，这里是网页的源代码，我们所需的信息均可以从这里提取,打开xpath-helper,页面介绍如下：<br><img src="https://img-blog.csdnimg.cn/20200329183842828.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里就暂时不介绍xpath语法了，直接进行查询使用了，以后会考虑专门出一篇xpath语法博客。<br>点击箭头选择想要的元素，如最佳男演员获奖者：<br><img src="https://img-blog.csdnimg.cn/20200329184300317.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200329185643231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>所以获奖者的外层元素为（div  class=’event_awards event_list’）—&gt;(dl)–&gt;(div class=’yellowbox’)–&gt;(div class=’review_list’)–&gt;(dl class=’fix’)—-&gt;(dd)–&gt;(strong class=’px14 c_a5)–&gt;a,可以编写xpath语句进行测试：<br><img src="https://img-blog.csdnimg.cn/20200329185911833.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200329185937451.png" alt="在这里插入图片描述"><br>年份可以一次提取到，最后在代码里对应一下即可。<br><img src="https://img-blog.csdnimg.cn/20200329190057923.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>由上所示每一年都在dd标签中，代码中循环读取即能读到所有年份的数据，这里再提一下提名者是在<code>div class=&#39;bluebox&#39;</code>下，提取方法与前一个yellowbox一样。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>这里使用Python类进行提取，只介绍主要的部分了：</p><h3 id="导入库"><a href="#导入库" class="headerlink" title="导入库"></a>导入库</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> random<span class="token keyword">import</span> json<span class="token keyword">import</span> re<span class="token keyword">import</span> time<span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree<span class="token keyword">from</span> ua <span class="token keyword">import</span> USER_AGENT   <span class="token comment" spellcheck="true">#请求头集合</span><span class="token keyword">from</span> spider<span class="token punctuation">.</span>dbs <span class="token keyword">import</span> StoreData  <span class="token comment" spellcheck="true">#自己写的一个打开mongdb数据库的类</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="StoreData"><a href="#StoreData" class="headerlink" title="StoreData"></a>StoreData</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">StoreData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> db<span class="token operator">=</span><span class="token string">"douban"</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">27017</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>host <span class="token operator">=</span> host        self<span class="token punctuation">.</span>port <span class="token operator">=</span> port        self<span class="token punctuation">.</span>client <span class="token operator">=</span> self<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">connect</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> host<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> MongoClient<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Mtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>osc_first_url<span class="token operator">=</span> <span class="token string">"http://award.mtime.com/3/award/31/"</span> <span class="token comment" spellcheck="true">#第一页链接</span>        self<span class="token punctuation">.</span>osc_url <span class="token operator">=</span> <span class="token string">"http://award.mtime.com/3/award/31/index-{}.html"</span><span class="token comment" spellcheck="true">##第二页开始链接</span>        self<span class="token punctuation">.</span>db <span class="token operator">=</span> StoreData<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>client<span class="token punctuation">[</span><span class="token string">"movie"</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">#mongodb</span>        self<span class="token punctuation">.</span>session <span class="token operator">=</span>requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 创建session对象，保持cookies</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>链接在前面已经说过了，有一点忘记提了，第一页链接和第二页链接不太一样，不能用通用的链接方式，具体看上面代码里。</p><h3 id="下载函数"><a href="#下载函数" class="headerlink" title="下载函数"></a>下载函数</h3><p>注意一定要用user-agent，这是基本反反爬。</p><pre class="line-numbers language-python"><code class="language-python">    <span class="token keyword">def</span> <span class="token function">download_page</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>url<span class="token punctuation">,</span><span class="token operator">**</span>headers_kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>        user_agent <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>USER_AGENT<span class="token punctuation">)</span>        headers <span class="token operator">=</span> <span class="token punctuation">{</span>            <span class="token string">"User-Agent"</span><span class="token punctuation">:</span> user_agent<span class="token punctuation">,</span>                <span class="token punctuation">}</span>        <span class="token keyword">if</span> headers_kwargs<span class="token punctuation">:</span>            headers<span class="token punctuation">.</span>update<span class="token punctuation">(</span>headers_kwargs<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">#get方法，前面截图里面已经注释过</span>        resp <span class="token operator">=</span> self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>                <span class="token keyword">return</span> resp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解析函数"><a href="#解析函数" class="headerlink" title="解析函数"></a>解析函数</h3><p>下面直接上提取解析代码，不太懂的看一下注释。</p><pre class="line-numbers language-python"><code class="language-python">    <span class="token keyword">def</span> <span class="token function">parser</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true">#将html文本转为etree类型，为了使用xpath</span>        xp_html <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>text<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">##年份提取  </span>        year <span class="token operator">=</span> xp_html<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"//div[@class='event_awards event_list']/dl/dt/text()"</span><span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">## 所需的信息都在这里面，只需要在后面循环读取</span>        all_movie<span class="token operator">=</span> xp_html<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"//div[@class='event_awards event_list']/dl/dd"</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> y<span class="token punctuation">,</span>movie <span class="token keyword">in</span> zip<span class="token punctuation">(</span>year<span class="token punctuation">,</span>all_movie<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true">## 获奖影片解析规则</span>            <span class="token comment" spellcheck="true">#这里是为了防止空，与scrapy的extract_fistrt()一样</span>                _winning_movie <span class="token operator">=</span> movie<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"div[@class='yellowbox']//strong[@class='px14 c_a5']/a/text()"</span><span class="token punctuation">)</span>                winning_movie <span class="token operator">=</span> _winning_movie<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">if</span> _winning_movie <span class="token keyword">else</span> <span class="token string">""</span>                <span class="token comment" spellcheck="true">## 获奖人的链接</span>                _href <span class="token operator">=</span> movie<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"div[@class='yellowbox']//strong[@class='px14 c_a5']/a/@href"</span><span class="token punctuation">)</span>                href <span class="token operator">=</span> _href<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">if</span> _href <span class="token keyword">else</span> <span class="token string">""</span>                <span class="token comment" spellcheck="true">## 提名人员</span>                _nominated_movie <span class="token operator">=</span> movie<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"div[@class='bluebox']//strong[@class='px14c_a5']//a/text()"</span><span class="token punctuation">)</span>                nominated_movie <span class="token operator">=</span> _nominated_movie <span class="token keyword">if</span> _nominated_movie <span class="token keyword">else</span> <span class="token string">""</span>                nominated_movie <span class="token operator">=</span> <span class="token punctuation">[</span>nm<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> nm <span class="token keyword">in</span> nominated_movie<span class="token punctuation">]</span>                <span class="token comment" spellcheck="true">## 提名人员链接</span>                _nominated_href <span class="token operator">=</span> movie<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"div[@class='bluebox']//strong[@class='px14c_a5']//a/@href"</span><span class="token punctuation">)</span>                nominated_href <span class="token operator">=</span> _nominated_href <span class="token keyword">if</span> _nominated_href <span class="token keyword">else</span> <span class="token string">""</span>                <span class="token comment" spellcheck="true"># 提取四位年份，这里是因为解析结果是类似于2020年（第92届）这样的，所以要稍微处理一下</span>                _yy <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">"\d{4}"</span><span class="token punctuation">,</span>y<span class="token punctuation">)</span>                yy <span class="token operator">=</span> _yy<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">if</span> _yy <span class="token keyword">else</span>  <span class="token string">""</span>                <span class="token comment" spellcheck="true">## 提取届次</span>                _sessions <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">"第(\d{2,3})届"</span><span class="token punctuation">,</span>y<span class="token punctuation">)</span>                sessions <span class="token operator">=</span> _sessions<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">if</span> _sessions <span class="token keyword">else</span> <span class="token string">""</span>                award_info <span class="token operator">=</span> <span class="token punctuation">{</span>                    <span class="token string">"年份"</span><span class="token punctuation">:</span>yy<span class="token punctuation">,</span>                    <span class="token string">"届次"</span><span class="token punctuation">:</span>sessions<span class="token punctuation">,</span>                    <span class="token string">"获奖"</span><span class="token punctuation">:</span>winning_movie<span class="token punctuation">,</span>                    <span class="token string">"获奖影片链接"</span><span class="token punctuation">:</span>href<span class="token punctuation">,</span>                    <span class="token string">"提名"</span><span class="token punctuation">:</span>nominated_movie<span class="token punctuation">,</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">#award_info .update(inner_context)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>award_info<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">#存储到mongdb中</span>                <span class="token comment" spellcheck="true">#actor为我MongoDB movie数据库里的一个集合名</span>                ret <span class="token operator">=</span> self<span class="token punctuation">.</span>db<span class="token punctuation">[</span><span class="token string">"actor"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>insert<span class="token punctuation">(</span>award_info<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h3><pre class="line-numbers language-python"><code class="language-python">    <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true">#判断是否是第一页，以此控制url</span>            <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>                url <span class="token operator">=</span> self<span class="token punctuation">.</span>osc_first_url            <span class="token keyword">else</span><span class="token punctuation">:</span>                url <span class="token operator">=</span> self<span class="token punctuation">.</span>osc_top100<span class="token punctuation">.</span>format<span class="token punctuation">(</span>i<span class="token punctuation">)</span>            resp <span class="token operator">=</span>self<span class="token punctuation">.</span>download_page<span class="token punctuation">(</span>url<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">#解决中文乱码</span>            resp<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">"utf-8"</span>            self<span class="token punctuation">.</span>parser<span class="token punctuation">(</span>resp<span class="token punctuation">.</span>text<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">#一共就10页，慢慢爬无所谓，不要影响人家的性能</span>            rd <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"睡眠{}秒"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>rd<span class="token punctuation">)</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>rd<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="爬取结果"><a href="#爬取结果" class="headerlink" title="爬取结果"></a>爬取结果</h3><p><img src="https://img-blog.csdnimg.cn/20200329192503227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020032919281258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这是MongoDB的展示结果，顺便一提这个MongoDB可视化软件还不错，有需要的可以私信、留言，老外的产品，不是打广告哦。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>至此就爬取完了最佳男演员的数据，因为这几个榜单前端模板都一样，最佳影片也是同理，修改一下url链接即可。</p><h2 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h2><h3 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h3><p>只需从MongoDB中读取数据，这里使用的是pandas库，下面是链接数据库和读取过程：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span>  pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>font_manager <span class="token keyword">import</span> FontProperties<span class="token keyword">from</span> spider<span class="token punctuation">.</span>dbs <span class="token keyword">import</span> StoreData<span class="token keyword">import</span> collections<span class="token comment" spellcheck="true">#如果要显示中文则需要设置字体</span>font <span class="token operator">=</span> FontProperties<span class="token punctuation">(</span>fname<span class="token operator">=</span><span class="token string">'C:\Windows\Fonts\simhei.ttf'</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>client <span class="token operator">=</span> StoreData<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>clientmv <span class="token operator">=</span> client<span class="token punctuation">[</span><span class="token string">"movie"</span><span class="token punctuation">]</span>act <span class="token operator">=</span> mv<span class="token punctuation">[</span><span class="token string">"actor"</span><span class="token punctuation">]</span>oscar <span class="token operator">=</span> mv<span class="token punctuation">[</span><span class="token string">"oscar"</span><span class="token punctuation">]</span>data <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>list<span class="token punctuation">(</span>act<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>osc <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>list<span class="token punctuation">(</span>oscar<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>matplotlib如果要显示中文则需要设置字体，参考上面，本文可视化相对简单，就只贴<strong>获奖次数前20</strong>的代码了：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#统计获奖次数</span>data<span class="token punctuation">[</span><span class="token string">"获奖"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">.</span>bar<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#设置X轴样式</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>color<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span>rotation<span class="token operator">=</span><span class="token number">90</span><span class="token punctuation">,</span>fontproperties<span class="token operator">=</span>font<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"获奖次数前20"</span><span class="token punctuation">,</span>fontproperties<span class="token operator">=</span>font<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="获奖次数前20"><a href="#获奖次数前20" class="headerlink" title="获奖次数前20"></a>获奖次数前20</h3><p><img src="https://img-blog.csdnimg.cn/20200329194020992.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里有点纳闷了，印象中<strong>丹尼尔·戴-刘易斯</strong>明明获奖获了3次，这里只显示了两次，经过我一番查看，发现时光上的丢失了2008-2010的数据（大家多包涵，懒得补充了，就用现在的数据了，大家就当做没看见，手动狗头保命）。</p><h3 id="提名次数前40名"><a href="#提名次数前40名" class="headerlink" title="提名次数前40名"></a>提名次数前40名</h3><p><img src="https://img-blog.csdnimg.cn/2020032919475746.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>纳尼，小李子的提名居然才4次，高居榜首的是拍过《阿拉伯的劳伦斯》和《特洛伊》的彼得奥图和拍过《呼啸山庄》和《傲慢与偏见》的劳伦斯·奥利弗。</p><h3 id="曾提名并获过奖的演员"><a href="#曾提名并获过奖的演员" class="headerlink" title="曾提名并获过奖的演员"></a>曾提名并获过奖的演员</h3><p><img src="https://img-blog.csdnimg.cn/20200329195249944.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这次通过时间魔法把小李子强行排到第一位，哈哈。</p><h3 id="陪跑运动员（一直陪跑，一直爽）"><a href="#陪跑运动员（一直陪跑，一直爽）" class="headerlink" title="陪跑运动员（一直陪跑，一直爽）"></a>陪跑运动员（一直陪跑，一直爽）</h3><p><img src="https://img-blog.csdnimg.cn/20200329195452662.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>心疼彼得奥图。</p><h3 id="评委喜欢的"><a href="#评委喜欢的" class="headerlink" title="评委喜欢的"></a>评委喜欢的</h3><p><img src="https://img-blog.csdnimg.cn/20200329195600855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到奥斯卡这些学院派评委还是相对喜欢<strong>剧情</strong>、<strong>爱情</strong>、<strong>喜剧</strong>、<strong>人物传记</strong>、<strong>犯罪</strong>、<strong>历史</strong>、<strong>战争</strong>两两组合或三三组合的电影，怪不得《盗梦空间》和《蝙蝠侠》没获奖。</p><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>本文简要的介绍了如何通过网页获取数据并进行一些数据可视化展示。<br>更多内容请关注<a href="http://www.happyhong.cn/">从今天开始种树</a><br>关注知识图谱与大数据公众号，获取更多内容。<br><img src="https://img-blog.csdnimg.cn/20200329200402437.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1b2h1YTEzOTUw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
